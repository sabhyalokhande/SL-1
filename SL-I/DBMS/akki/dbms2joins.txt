-- Create the database
CREATE DATABASE EmployeeDB;
USE EmployeeDB;

-- Create Employees table
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY AUTO_INCREMENT,
    EmployeeName VARCHAR(50),
    Age INT,
    Gender VARCHAR(10),
    DepartmentID INT
);

-- Create Departments table
CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY AUTO_INCREMENT,
    DepartmentName VARCHAR(50)
);

-- Create Salaries table (without PayDate)
CREATE TABLE Salaries (
    SalaryID INT PRIMARY KEY AUTO_INCREMENT,
    EmployeeID INT,
    SalaryAmount DECIMAL(10, 2),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);


-- Insert sample data into Departments table
INSERT INTO Departments (DepartmentName)
VALUES 
('HR'),
('Finance'),
('IT'),
('Marketing');

-- Insert sample data into Employees table
INSERT INTO Employees (EmployeeName, Age, Gender, DepartmentID)
VALUES 
('Alice Johnson', 30, 'Female', 1),
('Bob Smith', 35, 'Male', 2),
('Carol White', 28, 'Female', 3),
('David Brown', 40, 'Male', 4);

-- Insert sample data into Salaries table
INSERT INTO Salaries (EmployeeID, SalaryAmount)
VALUES 
(1, 50000),
(2, 60000),
(3, 55000),
(4, 62000);

--1. Inner Join: Get a list of employees with their department names.
SELECT Employees.EmployeeName, Departments.DepartmentName
FROM Employees
JOIN Departments ON Employees.DepartmentID = Departments.DepartmentID;

--2. Left Join: Get all employees and their salary (including those without a salary record).
SELECT Employees.EmployeeName, Salaries.SalaryAmount
FROM Employees
LEFT JOIN Salaries ON Employees.EmployeeID = Salaries.EmployeeID;

--3.Right Join: Get all departments and the employees in each department.
SELECT Departments.DepartmentName, Employees.EmployeeName
FROM Departments
RIGHT JOIN Employees ON Departments.DepartmentID = Employees.DepartmentID;

--4.Subquery: Find employees who have a salary greater than the average salary.
SELECT EmployeeName 
FROM Employees 
WHERE EmployeeID IN (
    SELECT EmployeeID 
    FROM Salaries 
    WHERE SalaryAmount > (SELECT AVG(SalaryAmount) FROM Salaries)
);

--5.. View: Create a view that shows each employee's name, department, and salary.

CREATE VIEW EmployeeDetails AS
SELECT Employees.EmployeeName, Departments.DepartmentName, Salaries.SalaryAmount
FROM Employees
JOIN Departments ON Employees.DepartmentID = Departments.DepartmentID
JOIN Salaries ON Employees.EmployeeID = Salaries.EmployeeID;


--6.
SELECT * FROM EmployeeDetails;

--7. Find the average salary per department.
SELECT Departments.DepartmentName, AVG(Salaries.SalaryAmount) AS AvgSalary
FROM Departments
JOIN Employees ON Departments.DepartmentID = Employees.DepartmentID
JOIN Salaries ON Employees.EmployeeID = Salaries.EmployeeID
GROUP BY Departments.DepartmentName;

--8.Delete Query: Remove employees who donâ€™t have a salary record.
DELETE FROM Employees 
WHERE EmployeeID NOT IN (SELECT EmployeeID FROM Salaries);

